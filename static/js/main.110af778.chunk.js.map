{"version":3,"sources":["components/header.js","components/footer.js","components/tag-group.js","common/storage.js","common/util.js","components/shuffle-btn.js","common/config.js","components/result.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","Component","Footer","noop","TagGroup","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleRemove","tag","tags","data","handleChange","filter","item","handleInputChange","e","setState","inputValue","target","value","handleInputConfirm","state","slice","indexOf","message","warning","toConsumableArray","concat","inputVisible","showInput","textInput","current","focus","handleClear","statusChange","success","React","createRef","_this2","_this$state","map","index","isLongTag","length","tagElem","es_tag","key","closable","afterClose","tooltip","title","input","ref","type","style","width","onChange","onBlur","onPressEnter","onClick","icon","popconfirm","okText","cancelText","placement","onConfirm","onCancel","es_button","shape","size","storage","set","localStorage","setItem","JSON","stringify","get","parse","getItem","remove","removeItem","clear","randomPick","arr","bound","parseInt","Math","random","motionHandler","HOVER_STYLES_LIST","split","ShuffleBtn","clickHandler","handleHover","hoverClass","status","btnClass","btnText","window","removeEventListener","handler","x","y","z","last_update","last_x","last_y","last_z","DeviceMotionEvent","addEventListener","event","acceleration","accelerationIncludingGravity","curTime","Date","getTime","diffTime","abs","addDeviceMotionHandler","onMouseEnter","disabled","Result","SELECTIONS_KEY","App","handleSelectionChange","selections","handleStatusChange","result","setTimeout","switchStatus","randomMethod","_this$state2","canShuffle","header_Header","tag_group_TagGroup","shuffle_btn_ShuffleBtn","result_Result","footer","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.110af778.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nexport default class Header extends Component {\n  render () {\n    return (\n      <div className=\"header\">\n        Random sth\n      </div>\n    )\n  }\n}\n\n","import React, { Component } from 'react'\n\nclass Footer extends Component {\n  render() {\n    return (\n      <div className=\"footer\">\n        Copyright © 2018 PSC. All rights reserved. \n      </div>\n    )\n  }\n}\n\nexport default Footer","import React, { Component } from 'react'\nimport { Tag, Input, Tooltip, Icon, Button, Popconfirm, message } from 'antd'\n\nfunction noop () {}\nexport default class TagGroup extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      inputVisible: false,\n      inputValue: ''\n    }\n    this.textInput = React.createRef()\n  }\n  handleRemove = (tag) => {\n    const tags = this.props.data\n    this.props.handleChange(tags.filter(item => item !== tag))\n  }\n  handleInputChange = (e) => {\n    this.setState({ inputValue: e.target.value })\n  }\n  handleInputConfirm = () => {\n    let inputValue = this.state.inputValue\n    let tags = this.props.data.slice(0)\n    if (!inputValue) {\n      return false\n    }\n    if (tags.indexOf(inputValue) > -1) {\n      message.warning('这条已存在了~')\n      return false\n    }\n    tags = [...tags, inputValue]\n    this.props.handleChange(tags)\n    this.setState({\n      inputValue: '',\n      inputVisible: false\n    })\n  }\n  showInput = () => {\n    this.setState({ inputVisible: true }, () => {\n      this.textInput.current.focus()\n    })\n  }\n  handleClear = () => {\n    this.props.handleChange([])\n    this.props.statusChange(0)\n    message.success('清空成功')\n  }\n  render() {\n    const { inputVisible, inputValue } = this.state\n    const tags = this.props.data || []\n    return (\n      <div className=\"tag-group\">\n        {tags.map((tag, index) => {\n          const isLongTag = tag.length > 8\n          const tagElem = (\n            <Tag key={tag} closable afterClose={() => this.handleRemove(tag)}>\n              {isLongTag ? `${tag.slice(0, 8)}...` : tag}\n            </Tag>\n          )\n          return isLongTag ? <Tooltip title={tag} key={index}>{tagElem}</Tooltip> : tagElem\n        })}\n        {inputVisible && (\n          <Input\n            ref={this.textInput}\n            type=\"text\"\n            style={{width: 78}}\n            value={inputValue}\n            onChange={this.handleInputChange}\n            onBlur={this.handleInputConfirm}\n            onPressEnter={this.handleInputConfirm}\n          />\n        )}\n        {!inputVisible && (\n          <Tag\n            className=\"add-btn\"\n            onClick={this.showInput}\n          >\n            <Icon type=\"plus\" />\n          </Tag>\n        )}\n        <Popconfirm\n          title=\"确定要清空吗？\"\n          okText=\"确定\"\n          cancelText=\"取消\"\n          placement=\"bottom\"\n          onConfirm={this.handleClear}\n          onCancel={noop}\n        >\n          <Button className=\"clear-btn\" shape=\"circle\" size=\"small\" icon=\"delete\" />\n        </Popconfirm>\n      </div>\n    )\n  }\n}\n","export default {\n  set (key, value) {\n    localStorage.setItem(key, JSON.stringify(value))\n  },\n  get (key) {\n    return JSON.parse(localStorage.getItem(key))\n  },\n  remove (key) {\n    localStorage.removeItem(key)\n  },\n  clear () {\n    localStorage.clear()\n  }\n}","export function shuffle (arr) {\n  let nArr = []\n  while (arr.length > 0) {\n    let bound = arr.length\n    let index = parseInt(Math.random() * bound)\n    nArr.push(arr.splice(index, 1))\n  }\n  return nArr\n}\n\nexport function randomPick (arr) {\n  let bound = arr.length\n  let index = parseInt(Math.random() * bound)\n  return arr[index]\n}\n\n// 手机摇一摇事件\nlet motionHandler = null\nexport function addDeviceMotionHandler (handler) {\n  var SHAKE_THRESHOLD = 4000\n  var last_update = 0\n  var x, y, z, last_x = 0, last_y = 0, last_z = 0\n  if (window.DeviceMotionEvent) {\n    window.addEventListener('devicemotion', motionHandler, false)\n  }\n  motionHandler = function (event) {\n    var acceleration = event.accelerationIncludingGravity\n    var curTime = new Date().getTime()\n    if ((curTime - last_update) > 10) {\n      var diffTime = curTime - last_update\n      last_update = curTime\n      x = acceleration.x\n      y = acceleration.y\n      z = acceleration.z\n      var speed = Math.abs(x + y + z - last_x - last_y - last_z) / diffTime * 10000\n      if (speed > SHAKE_THRESHOLD) {\n        handler(event)\n      }\n      last_x = x\n      last_y = y\n      last_z = z\n    }\n  }\n}\nexport function removeDeviceMotionHandler () {\n  window.removeEventListener('devicemotion', motionHandler)\n}","import React, { Component } from 'react'\nimport { HOVER_STYLES } from '../common/config'\nimport { randomPick, addDeviceMotionHandler, removeDeviceMotionHandler } from '../common/util'\nimport '../styles/hover-min.css'\n\nconst HOVER_STYLES_LIST = HOVER_STYLES.split(',')\nexport default class ShuffleBtn extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      hoverClass: randomPick(HOVER_STYLES_LIST)\n    }\n  }\n  clickHandler = () => {\n    this.props.handleChange(1)\n  }\n  handleHover = () => {\n    this.setState({ hoverClass: randomPick(HOVER_STYLES_LIST)})\n  }\n  render() {\n    const status = this.props.status\n    let btnClass = `shuffle-btn hvr-${this.state.hoverClass}`\n    let btnText = ''\n    switch (status) {\n      case 0:\n        btnClass += ' default'\n        btnText = '摇一摇'\n        break;\n      case 1:\n        btnClass += ' loading'\n        btnText = '随机中'\n        break\n      case 2:\n        btnClass += ' done'\n        btnText = '再摇一次'\n        break\n      default: break\n    }\n    if (status !== 1) {\n      removeDeviceMotionHandler()\n      addDeviceMotionHandler(() => {\n        this.clickHandler()\n      })\n    }\n    return (\n      <button\n        className={btnClass}\n        onMouseEnter={this.handleHover}\n        onClick={this.clickHandler}\n        disabled={status === 1}\n      >\n        {btnText}\n      </button>\n    )\n  }\n}\n","export const RANDOM_METHODS = {\n  '0': 'default'\n}\nexport const INPUT_METHODS = {\n  '0': '默认',\n}\n// export const HOVER_STYLES = 'hvr-float-shadow,hvr-grow,hvr-shrink,hvr-pulse,hvr-pulse-grow,hvr-pulse-shrink,hvr-push,hvr-pop,hvr-bounce-in,hvr-bounce-out,hvr-rotate,hvr-grow-rotate,hvr-float,hvr-sink,hvr-bob,hvr-hang,hvr-skew,hvr-skew-forward,hvr-skew-backward,hvr-wobble-horizontal,hvr-wobble-vertical,hvr-wobble-to-bottom-right,hvr-wobble-to-top-right,hvr-wobble-top,hvr-wobble-bottom,hvr-wobble-skew,hvr-buzz,hvr-buzz-out,hvr-forward,hvr-backward,hvr-fade,hvr-back-pulse,hvr-sweep-to-right,hvr-sweep-to-left,hvr-sweep-to-bottom,hvr-sweep-to-top,hvr-bounce-to-right,hvr-bounce-to-left,hvr-bounce-to-bottom,hvr-bounce-to-top,hvr-radial-out,hvr-radial-in,hvr-rectangle-in,hvr-rectangle-out,hvr-shutter-in-horizontal,hvr-shutter-out-horizontal,hvr-shutter-in-vertical,hvr-shutter-out-vertical,hvr-icon-back,hvr-icon-forward,hvr-icon-down,hvr-icon-up,hvr-icon-spin,hvr-icon-drop,hvr-icon-fade,hvr-icon-float-away,hvr-icon-sink-away,hvr-icon-grow,hvr-icon-shrink,hvr-icon-pulse,hvr-icon-pulse-grow,hvr-icon-pulse-shrink,hvr-icon-push,hvr-icon-pop,hvr-icon-bounce,hvr-icon-rotate,hvr-icon-grow-rotate,hvr-icon-float,hvr-icon-sink,hvr-icon-bob,hvr-icon-hang,hvr-icon-wobble-horizontal,hvr-icon-wobble-vertical,hvr-icon-buzz,hvr-icon-buzz-out,hvr-border-fade,hvr-hollow,hvr-trim,hvr-ripple-out,hvr-ripple-in,hvr-outline-out,hvr-outline-in,hvr-round-corners,hvr-underline-from-left,hvr-underline-from-center,hvr-underline-from-right,hvr-reveal,hvr-underline-reveal,hvr-overline-reveal,hvr-overline-from-left,hvr-overline-from-center,hvr-overline-from-right,hvr-shadow,hvr-grow-shadow,hvr-float-shadow,hvr-glow,hvr-shadow-radial,hvr-box-shadow-outset,hvr-box-shadow-inset,hvr-bubble-top,hvr-bubble-right,hvr-bubble-bottom,hvr-bubble-left,hvr-bubble-float-top,hvr-bubble-float-right,hvr-bubble-float-bottom,hvr-bubble-float-left,hvr-curl-top-left,hvr-curl-top-right,hvr-curl-bottom-right,hvr-curl-bottom-left,hvr-float, hvr-float'\n\nexport const HOVER_STYLES = 'grow,shrink,pulse,push,pop,grow-rotate,float,sink,bob,skew-forward,skew-backward,wobble-horizontal,wobble-vertical,wobble-to-bottom-right,wobble-to-top-right,wobble-top,wobble-bottom,wobble-skew,buzz,buzz-ouy,forward,backward'","import React, { Component } from 'react'\nexport default class Result extends Component {\n  render() {\n    return (\n      <div className=\"result\">\n        <div className=\"result-text\">结果是~ <span>{this.props.data}</span></div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport Header from './components/header'\nimport Footer from './components/footer'\nimport TagGroup from './components/tag-group'\nimport storage from './common/storage'\nimport ShuffleBtn from './components/shuffle-btn'\nimport Result from './components/result'\nimport { randomPick } from './common/util'\nimport './styles/App.scss'\nimport 'antd/dist/antd.min.css'\n\nconst SELECTIONS_KEY = 'SELECTIONS'\nclass App extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      status: 0,\n      selections: storage.get(SELECTIONS_KEY) || [],\n      randomMethod: 0,\n      result: ''\n    }\n  }\n  handleSelectionChange = (value) => {\n    this.setState({ selections: value })\n    storage.set(SELECTIONS_KEY, value)\n  }\n  handleStatusChange = (value) => {\n    let { selections, result } = this.state\n    switch (value) {\n      case 0:\n        result = ''\n        break\n      case 1:\n        result = randomPick(selections)\n        setTimeout(() => {\n          this.setState({ status: 2, result })\n        })\n        break\n      default: break\n    }\n    this.setState({ status: value })\n  }\n  switchStatus = (target) => {\n    this.setState({ status: target})\n  }\n  render() {\n    const { status, selections, result } = this.state\n    let canShuffle = selections.length > 1 && status !== 1\n    return (\n      <div className=\"app\">\n        <Header />\n        <TagGroup data={selections} handleChange={this.handleSelectionChange} statusChange={this.handleStatusChange}/>\n        {canShuffle && (\n          <ShuffleBtn status={status} handleChange={this.handleStatusChange}/>\n        )}\n        {/* {status === 2 && (\n          <Loading data={selections}/>\n        )} */}\n        {status === 2 && (\n          <Result data={result}/>\n        )}\n        <Footer />\n      </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './styles/index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}